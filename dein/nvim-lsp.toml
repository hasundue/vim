[[plugins]]
repo = 'neovim/nvim-lspconfig'

hook_add = '''

lua << EOF

require'lspconfig'.julials.setup{
    handlers = {
        ["textDocument/publishDiagnostics"] = vim.lsp.with(
            vim.lsp.diagnostic.on_publish_diagnostics, {
                virtual_text = false,
                signs = false,
                underline = false,
                update_in_insert = true,
            }
        )
    }
}

require'lspconfig'.dartls.setup{}

EOF

nnoremap <silent> <c-]> <cmd>lua vim.lsp.buf.definition()<CR>

'''

[[plugins]]
repo = 'williamboman/nvim-lsp-installer'
depends = 'neovim/nvim-lspconfig'

hook_post_source = '''
lua << EOF
local lsp_installer = require("nvim-lsp-installer")

-- Register a handler that will be called for all installed servers.
-- Alternatively, you may also register handlers on specific server instances instead (see example below).
lsp_installer.on_server_ready(function(server)
    local opts = {}

    -- (optional) Customize the options passed to the server
    -- if server.name == "tsserver" then
    --     opts.root_dir = function() ... end
    -- end

    -- This setup() function is exactly the same as lspconfig's setup function.
    -- Refer to https://github.com/neovim/nvim-lspconfig/blob/master/doc/server_configurations.md
    server:setup(opts)
end)
EOF
'''
