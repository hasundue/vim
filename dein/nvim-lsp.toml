[[plugins]]
repo = 'williamboman/nvim-lsp-installer'
depends = ['nvim-lspconfig', 'plenary.nvim']

hook_add = '''
lua << EOF
local nvim_lsp = require('lspconfig')
local lsp_installer = require("nvim-lsp-installer")

lsp_installer.on_server_ready(function(server)
  local opts = {}

  if server.name == "tsserver" then
    opts.root_dir = nvim_lsp.util.root_pattern("package.json")
  elseif server.name == "eslint" then
    opts.root_dir = nvim_lsp.util.root_pattern(".eslintrc.*")
  elseif server.name == "denols" then
    opts.root_dir = nvim_lsp.util.root_pattern("denops")
    opts.init_options = { lint = true, unstable = true, }
  end

  opts.handlers = {
    ["textDocument/publishDiagnostics"] = vim.lsp.with(
    vim.lsp.diagnostic.on_publish_diagnostics, {
      signs = false,
      update_in_insert = false,
    }
    )
  }

  if server.name == "julials" then
    opts.handlers = {
      ["textDocument/publishDiagnostics"] = vim.lsp.with(
        vim.lsp.diagnostic.on_publish_diagnostics, {
          signs = false,
          underline = false,
          virtual_text = false,
          update_in_insert = false,
        }
      )
    }
  end

  server:setup(opts)
end)
EOF

nnoremap <silent> <c-]> <cmd>lua vim.lsp.buf.definition()<CR>
nnoremap <silent> d? <cmd>lua vim.diagnostic.open_float()<CR>
'''

[[plugins]]
repo = 'neovim/nvim-lspconfig'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'
