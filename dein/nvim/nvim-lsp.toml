[[plugins]]
repo = 'williamboman/nvim-lsp-installer'
depends = 'nvim-lspconfig'
hook_add = '''
lua << EOF
local lsp_installer = require("nvim-lsp-installer")

lsp_installer.setup {
  ensure_installed = {
    "bashls",
    "vimls",
    "denols",
    "tsserver",
    "eslint",
    "cssls",
    -- "julials",
    -- "dartls",
    "sumneko_lua",
  },
}

local lspconfig = require("lspconfig")

lspconfig.bashls.setup{}
lspconfig.vimls.setup{}

lspconfig.denols.setup {
  root_dir = lspconfig.util.root_pattern("denops", "deno.json", "deno.jsonc"),
  init_options = { lint = true, unstable = true, },
}

lspconfig.tsserver.setup {
  root_dir = lspconfig.util.root_pattern("package.json"),
}

lspconfig.eslint.setup {
  root_dir = lspconfig.util.root_pattern(".eslintrc.*"),
}

lspconfig.sumneko_lua.setup {
  lua = {
    diagnostics = {
      globals = {"vim"},
    },
  },
  workspace = {
    library = vim.api.nvim_get_runtime_file("", true),
  },
}
EOF
'''

[[plugins]]
repo = 'neovim/nvim-lspconfig'
hook_add = '''
nnoremap <silent> <c-]> <cmd>lua vim.lsp.buf.definition()<CR>
nnoremap <silent> d? <cmd>lua vim.diagnostic.open_float()<CR>
nnoremap <silent> K <cmd>lua vim.lsp.buf.hover()<CR>
nnoremap <silent> <leader>lr <cmd>lua vim.lsp.buf.rename()<CR>
'''
