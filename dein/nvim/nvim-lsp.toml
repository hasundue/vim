[[plugins]]
repo = 'williamboman/nvim-lsp-installer'
depends = 'nvim-lspconfig'
hook_add = '''
lua << EOF
local lsp_installer = require("nvim-lsp-installer")

lsp_installer.setup {
  ensure_installed = {
    "bashls",
    "vimls",
    "denols",
    "tsserver",
    "eslint",
    "cssls",
    -- "jsonls",
    "yamlls",
    -- "julials",
    -- "dartls",
    "sumneko_lua",
  },
}

local lspconfig = require("lspconfig")

lspconfig.bashls.setup{}

lspconfig.vimls.setup{
  autostart = false,
}

lspconfig.denols.setup {
  root_dir = lspconfig.util.root_pattern(
    "denops",
    "mod.ts",
    "deno.json",
    "deno.jsonc",
    "import_map.json"
  ),
  init_options = {
    lint = true,
    unstable = true,
    importMap = lspconfig.util.root_pattern("import_map.json")(
      vim.api.nvim_eval('expand("%:p")')
    ) ~= nil and "import_map.json" or nil,
  },
}

lspconfig.tsserver.setup {
  root_dir = lspconfig.util.root_pattern("package.json"),
}

lspconfig.eslint.setup {
  root_dir = lspconfig.util.root_pattern(".eslintrc*"),
}

lspconfig.cssls.setup{}

-- lspconfig.jsonls.setup{}

lspconfig.yamlls.setup {
  settings = {
    yaml = {
      schemas = {
        [ "https://json.schemastore.org/github-workflow.json" ] = "/.github/workflows/*",
      },
    },
  },
}

lspconfig.sumneko_lua.setup {
  Lua = {
    diagnostics = {
      globals = {"vim"},
    },
  },
  workspace = {
    library = vim.api.nvim_get_runtime_file("", true),
  },
  autostart = false,
}
EOF
'''

[[plugins]]
repo = 'neovim/nvim-lspconfig'
hook_add = '''
nnoremap <silent> <c-]> <cmd>lua vim.lsp.buf.definition()<CR>
nnoremap <silent> d? <cmd>lua vim.diagnostic.open_float()<CR>
nnoremap <silent> K <cmd>lua vim.lsp.buf.hover()<CR>
nnoremap <silent> <leader>lr <cmd>lua vim.lsp.buf.rename()<CR>
'''

[[plugins]]
repo = 'matsui54/denops-signature_help'
depends = 'denops.vim'
hook_add = '''
let g:signature_help_config = {
  \ 'border': v:false,
  \ }
'''
on_source = 'ddc.vim'
hook_source = '''
call signature_help#enable()
'''
