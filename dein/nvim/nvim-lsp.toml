[[plugins]]
repo = 'williamboman/mason.nvim'
lua_source = '''
require("mason").setup()
'''

[[plugins]]
repo = 'williamboman/mason-lspconfig.nvim'
depends = 'mason.nvim'
lua_source = '''
require("mason-lspconfig").setup({
  automatic_installation = true,
})
'''

[[plugins]]
repo = 'neovim/nvim-lspconfig'
depends = ['mason.nvim', 'mason-lspconfig.nvim']
lua_source = '''
local lspconfig = require("lspconfig")

lspconfig.vimls.setup({
  autostart = false,
})

lspconfig.sumneko_lua.setup({
  Lua = {
    diagnostics = {
      globals = {"vim"},
    },
  },
  workspace = {
    library = vim.api.nvim_get_runtime_file("", true),
  },
  autostart = true,
})

lspconfig.bashls.setup{}

lspconfig.denols.setup({
  single_file_support = false,
  root_dir = lspconfig.util.root_pattern(
    "denops",
    "mod.ts",
    "deno.json",
    "deno.jsonc"
  ),
  init_options = {
    lint = false,
    unstable = true
  },
})

lspconfig.tsserver.setup {
  root_dir = lspconfig.util.root_pattern("package.json"),
}

lspconfig.eslint.setup {
  root_dir = lspconfig.util.root_pattern(".eslintrc*"),
}

lspconfig.cssls.setup{}
lspconfig.sqlls.setup{}

lspconfig.jsonls.setup{}

lspconfig.yamlls.setup {
  settings = {
    yaml = {
      schemas = {
        [ "https://json.schemastore.org/github-workflow.json" ] = "/.github/workflows/*",
      },
    },
  },
}

lspconfig.julials.setup({
  autostart = true,
})
'''
hook_add = '''
nnoremap <silent> <c-]> <cmd>lua vim.lsp.buf.definition()<CR>
nnoremap <silent> d? <cmd>lua vim.diagnostic.open_float()<CR>
nnoremap <silent> K <cmd>lua vim.lsp.buf.hover()<CR>
nnoremap <silent> <leader>lr <cmd>lua vim.lsp.buf.rename()<CR>

autocmd Init BufWritePre * lua vim.lsp.buf.formatting_sync()
'''

[[plugins]]
repo = 'jose-elias-alvarez/null-ls.nvim'
depends = ['plenary.nvim']
lua_source = '''
local null_ls = require("null-ls")

null_ls.setup({
  sources = {
    null_ls.builtins.diagnostics.textlint.with({
      filetypes = { "markdown" }
    }),
  }
})
'''

[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'matsui54/denops-signature_help'
depends = 'denops.vim'
hook_add = '''
let g:signature_help_config = {
  \ 'border': v:false,
  \ }
'''
on_source = 'ddc.vim'
hook_source = '''
call signature_help#enable()
'''
