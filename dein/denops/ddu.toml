[[plugins]]
repo = 'Shougo/ddu.vim'
depends = 'denops.vim'
on_source = 'denops.vim'
hook_add = '''
nnoremap <silent> <leader>uf <cmd>Ddu 
  \ file_external<CR>
nnoremap <silent> <leader>uc <cmd>Ddu
  \ file_external -source-option-path='`expand('~/.config/vim')`'<CR>
nnoremap <silent> <leader>ug <cmd>Ddu
  \ rg<CR>
nnoremap <silent> <leader>uh <cmd>Ddu
  \ help<CR>
nnoremap <silent> <leader>ut <cmd>Ddu
  \ -name=filer -ui=filer -resume=v:true file<CR>
nnoremap <silent> <leader>pu <cmd>Ddu
  \ dein_update -ui-param-startFilter=v:false<CR>
'''
hook_source = '''
call ddu#custom#patch_global(#{
  \   ui: 'ff',
  \   uiParams: #{
  \     ff: #{
  \       startFilter: v:true,
  \     },
  \   },
  \   sourceOptions: #{
  \     file_external: #{
  \       matchers: ['matcher_zf'],
  \     },
  \     rg: #{
  \       matchers: [],
  \     },
  \     file: #{
  \       columns: ['filename'],
  \     },
  \     dein_update: #{
  \       matchers: ['matcher_dein_update'],
  \     },
  \     help: #{
  \       matchers: ['matcher_zf'],
  \     },
  \   },
  \   sourceParams: #{
  \     file_external: #{
  \       cmd: ['git', 'ls-files', '--cached', '--recurse-submodules', '--exclude-standard'],
  \     },
  \     rg: #{
  \       args: ['--column', '--no-heading', '--color', 'never'],
  \     },
  \   },
  \   filterParams: #{
  \     matcher_zf: #{
  \       caseSensitive: v:false,
  \       strictPath: v:false,
  \     },
  \   },
  \   kindOptions: #{
  \     file: #{
  \       defaultAction: 'open',
  \     },
  \     dein_update: #{
  \       defaultAction: 'viewDiff',
  \     },
  \     deol: #{
  \       defaultAction: 'switch',
  \     },
  \     help: #{
  \       defaultAction: 'open',
  \     },
  \   },
  \   actionOptions: #{
  \     echo: #{
  \       quit: v:false,
  \     },
  \     echoDiff: #{
  \       quit: v:false,
  \     },
  \     narrow: #{
  \       quit: v:false,
  \     },
  \   },
  \ })

if has('nvim')
  call ddu#custom#patch_global(#{
    \   uiParams: #{
    \     _: #{
    \       split: 'floating',
    \       filterFloatingPosition: 'top',
    \       filterSplitDirection: 'floating',
    \       floatingBorder: 'none',
    \     },
    \   }
    \ })
endif
'''

[[plugins]]
repo = 'Shougo/ddu-commands.vim'
depends = 'ddu.vim'
on_cmd = 'Ddu'

[[plugins]]
repo = 'Shougo/ddu-ui-ff'
on_source = 'ddu.vim'

[plugins.ftplugin]
ddu-ff = '''
  nnoremap <buffer><silent> <CR> <Cmd>call ddu#ui#do_action('itemAction')<CR>
  nnoremap <buffer><silent> <Space> <Cmd>call ddu#ui#do_action('toggleSelectItem')<CR>
  nnoremap <buffer><silent> i <Cmd>call ddu#ui#do_action('openFilterWindow')<CR>
  nnoremap <buffer><silent> q <Cmd>call ddu#ui#do_action('quit')<CR>
'''
ddu-ff-filter = '''
  inoremap <buffer><silent> <CR> <Esc><Cmd>close<CR>
  nnoremap <buffer><silent> <CR> <Cmd>close<CR>
'''

[[plugins]]
repo = 'Shougo/ddu-ui-filer'
on_source = 'ddu.vim'

[plugins.ftplugin]
ddu-filer = '''
  nnoremap <buffer><expr><silent> <CR>
    \ ddu#ui#get_item()->get('isTree', v:false) ?
    \ "<Cmd>call ddu#ui#do_action('itemAction', {'name': 'narrow'})<CR>" :
    \ "<Cmd>call ddu#ui#do_action('itemAction', {'name': 'open'})<CR>"
  nnoremap <buffer><silent> ..
    \ <Cmd>call ddu#ui#do_action('itemAction', #{ 
    \     name: 'narrow', 
    \     params: #{ path: '..', }
    \ })<CR>
  nnoremap <buffer><expr><silent> <Space>
    \ <Cmd>call ddu#ui#do_action('toggleSelectItem')<CR>
  nnoremap <buffer><silent> q
    \ <Cmd>call ddu#ui#do_action('quit')<CR>
'''

[[plugins]]
repo = 'Shougo/ddu-column-filename'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-kind-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'matsui54/ddu-source-file_external'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'shun/ddu-source-rg'
on_source = 'ddu.vim'

[[plugins]]
repo = 'matsui54/ddu-source-dein_update'
on_source = 'ddu.vim'

[[plugins]]
repo = 'matsui54/ddu-source-help'
on_source = 'ddu.vim'

[[plugins]]
repo = 'hasundue/ddu-filter-zf'
build = 'deno task build'
on_source = 'ddu.vim'
